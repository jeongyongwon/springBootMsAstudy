server:
  port: 8000

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/**

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters: # 변환작업
            - RemoveRequestHeader=Cookie  # 매번 요청마다 헤더값 삭제
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}  # , 앞의 형식으로 들어오면 뒤의 형식으로 바꾸겟단 이야기

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters: # 변환작업
            - RemoveRequestHeader=Cookie  # 매번 요청마다 헤더값 삭제
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}  # , 앞의 형식으로 들어오면 뒤의 형식으로 바꾸겟단 이야기

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters: # 변환작업
            - RemoveRequestHeader=Cookie  # 매번 요청마다 헤더값 삭제
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}  # , 앞의 형식으로 들어오면 뒤의 형식으로 바꾸겟단 이야기

        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**


        - id : test-service
          uri : lb://TEST-SERVICE
          predicates:
            -  Path=/yongwon/**

        - id : order-service
          uri : lb://ORDER-SERVICE
          predicates:
            -  Path=/order-service/**

        - id: my-second-name
          uri: lb://MY-SECOND-NAME
          predicates:
            - Path=/my-second-name/**

      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Gateway Global Filter
            preLogger: true
            postLogger: true

